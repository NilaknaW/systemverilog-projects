module p2s_tb;
	timeunit 1ns; timeprecision 1ps;
	
	logic clk = 1, rstn = 0;
	localparam CLK_PERIOD = 10;
	always #(CLK_PERIOD/2) clk <= ~clk;
	
	parameter N=4;
	logic [N-1:0] par_data;
	logic par_valid = 0, par_ready, ser_ready, ser_data, ser_valid;
	
	p2s #(.N(N)) dut(.*);
	
	initial begin
		$dumpfile("dump.vcd"); $dumpvars;
		@(posedge clk); #1 rstn <= 0; // reset (active low)
		@(posedge clk); #1 rstn <= 1; // remove reset
		
		@(posedge clk) #1 par_data <= 8'd27 ; par_valid <= 0; ser_ready <= 1;  #(CLK_PERIOD *3) // testcase01
		
		@(posedge clk) #1 par_data <= 8'd62 ; par_valid <= 1; // testcase02
		@(posedge clk) #1 par_valid <= 0; #(CLK_PERIOD *10)
		
		@(posedge clk) #1 par_data <= 8'd52 ; par_valid <= 1; // testcase02
		@(posedge clk) #1 par_valid <= 0; ser_ready <= 0; #(CLK_PERIOD *3)
		
		@(posedge clk) #1 ser_ready <= 1; #(CLK_PERIOD *10)
		@(posedge clk) #1 ser_ready <= 0;
		$finish();		
	end
endmodule
	